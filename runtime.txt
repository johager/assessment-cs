The Javascript push() function has time complexity of O(1). It only has to add an element to the end of the array which is a simple, one-step process. Therefore, the function doublerAppend(nums), which wraps the push() function inside a for-loop over an array of number has a time-complexity of O(n). This is shown in timing.xlsx and timing_doubler.pdf. (The slope on the log-log plot indicates the order.)

The Javascript unshift() function has time complexity of O(n). When it adds an element to the beginning of the array, it has to shift all other elements one index to the right, an increasingly-complicated process. Therefore, the function doublerInsert(nums), which wraps the unshift() function inside a for-loop over an array of number has a time-complexity of O(n^2). This is shown in timing.xlsx and timing_doubler.pdf. (The slope on the log-log plot indicates the order.)